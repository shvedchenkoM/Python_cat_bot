from CatTools.CatActions import CatActions
from CatTools.CatSettings import CatSettings
from telebot import types
from Tools import Tools


class CatUtils(CatActions):
    def __init__(self, images):
        CatActions.__init__(self, images)

    def get_my_cat(self):
        return "üò∏–ò–º—è –≤–∞—à–µ–≥–æ –∫–æ—Ç–∏–∫–∞: " + self.name + "\n" + \
               "‚≠êÔ∏è–£—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–≥–æ –∫–æ—Ç–∏–∫–∞: " + str(self.level) + "\n" + \
               "üêü–°—ã—Ç–æ—Å—Ç—å: " + str(self.hunger) + "/" + str(self.max_hunger) + "\n" + \
               "üîÆ–ú—É—Ä–º–∞–Ω–∞: " + str(self.murmana) + "/" + str(self.max_mana_value) + "\n" + \
               "üêÅ–ú—ã—à–∫–∏: " + str(self.mice) + "\n\n" + \
               "üåö–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: " + str(self.mood) + "(" + self.mood_desc() + ")" + "\n\n" + \
               "üí™–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥: " + str(self.win) + "\n" + \
               "üëé–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä–∞–∂–µ–Ω–∏–π: " + str(self.lose) + "\n"

    def get_cat_info(self):
        timeE = Tools.get_time_to_string((self.eat_time_left()))
        timeT = Tools.get_time_to_string((self.training_time_left()))
        timeW = Tools.get_time_to_string((self.work_time_left()))
        if timeT > timeW:
            time = timeT
        else:
            time = timeW
        return "üêü–ö–æ—Ç–∏–∫–∞ –º–æ–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å " + timeE + "\n" + \
               "üíº–ö–æ—Ç–∏–∫–∞ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç—É " + time + "\n" \
               "üßöüèº‚Äç‚ôÄÔ∏è–ö–æ—Ç–∏–∫–∞ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É " + time + "\n" \
               "‚öîÔ∏è–ú–æ–∂–Ω–æ —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø–æ–µ–¥–∏–Ω–∫–µ\n" \
               "üéâ–ú–æ–∂–Ω–æ –ø–æ–π—Ç–∏ –Ω–∞ —Ç—É—Å—É\n" \
               "üíù–ö–æ—Ç–∏–∫ –Ω–µ –≤ –±—Ä–∞–∫–µ"

    def get_keyboard(self):
        keyboard = types.InlineKeyboardMarkup()
        if not self.is_cat_eat:
            eat = types.InlineKeyboardButton(text="–ü–æ–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∏–∫–∞",
                                             switch_inline_query_current_chat="–ü–æ–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∏–∫–∞")
            keyboard.add(eat)
        if self.is_cat_home:
            train = types.InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ—Ç–∏–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É",
                                               switch_inline_query_current_chat="–Ω–∞ —Ç—Ä–µ—à—É")
            keyboard.add(train)
        if self.is_cat_home:
            work = types.InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ—Ç–∏–∫–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É",
                                              switch_inline_query_current_chat="–Ω–∞ —Ä–∞–±–æ—Ç—É")
            keyboard.add(work)

        if self.is_cat_train and self.training_time_left() == "00:00:00":
            home = types.InlineKeyboardButton(text="–ó–∞–±—Ä–∞—Ç—å –∫–æ—Ç–∏–∫–∞ —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                                              switch_inline_query_current_chat="—Å —Ç—Ä–µ—à–∏")
            keyboard.add(home)

        if self.is_cat_work and self.work_time_left() == "00:00:00":
            home = types.InlineKeyboardButton(text="–ó–∞–±—Ä–∞—Ç—å –∫–æ—Ç–∏–∫–∞ —Å —Ä–∞–±–æ—Ç—ã",
                                              switch_inline_query_current_chat="—Å —Ä–∞–±–æ—Ç—ã")
            keyboard.add(home)
        return keyboard
